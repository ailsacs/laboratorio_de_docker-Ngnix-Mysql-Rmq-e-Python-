version: '3.8'

services:
  lab-rabbitmq:
    image: rabbitmq:3-management
    container_name: lab-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    networks:
      - app-network
    command: ["rabbitmq-server"]
    env_file:
      - .env
  
  criar-fila:
    image: rabbitmq:3-management
    container_name: criar-fila
    depends_on:
      - lab-rabbitmq
    environment:
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_QUEUE: ${RABBITMQ_QUEUE}
    entrypoint: >
      /bin/bash -c "  
      sleep 20 && rabbitmqadmin --username=${RABBITMQ_USER} --password=${RABBITMQ_PASSWORD} declare queue name=${RABBITMQ_QUEUE} durable=true -H lab-rabbitmq
      "
    networks:
      - app-network
    env_file:
      - .env

  lab-mysql:
    image: mysql:latest
    container_name: lab-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:3306"
    volumes:
      -  ${DB_PATH}:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d/
    networks:
      - app-network
    env_file:
      - .env

  lab-web:
    image: nginx:latest
    container_name: lab-web
    restart: always
    ports:
      - "${WEB_SERV_PORT}:80"
    volumes:
      - ${WEB_SERV_PATH}:/var/www/html/
      - ./config:/etc/nginx/conf.d
    env_file:
      - .env
    networks:
      - app-network

  lab-adminer:
    image: adminer
    container_name: lab-adminer
    restart: always
    ports:
      - "8083:8080" # Porta para acessar o Adminer
    networks:
      - app-network

  lab-backend-intermediario:
    image: backend-intermediario
    container_name: lab-backend-intermediario
    build:
      context: ./ima
    ports:
      - "5000:5000"
    environment:
      - rabbitmq_host=lab-rabbitmq
      - rabbitmq_queue=mensagens
    depends_on:
      - lab-rabbitmq
    env_file:
      - .env
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
